apply plugin: "com.android.application"

android {
    buildToolsVersion "30.0.3"
    compileSdkVersion 30
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['../Assets/asset']
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
    defaultConfig {
        applicationId "com.tony.bricks"
        minSdkVersion 9
        targetSdkVersion 30
        versionCode 5
        versionName "1.4"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task copyAndroidNatives {
    doFirst {
        file("libs/armeabi/").mkdirs()
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
    }
}
tasks.whenTaskAdded { packageTask ->
    if (packageTask.name.contains("package")) {
        packageTask.dependsOn 'copyAndroidNatives'
    }
}
task run(type: Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.tony.bricks/com.tony.bricks.AndroidLauncher'
}
// sets up the Android Idea project, using the old Ant based build.
idea {
    module {
        sourceDirs += file("src");
        scopes = [COMPILE: [plus: [project.configurations.compile]]]

        iml {
            withXml {
                def node = it.asNode()
                def builder = NodeBuilder.newInstance();
                builder.current = node;
                builder.component(name: "FacetManager") {
                    facet(type: "android", name: "Android") {
                        configuration {
                            option(name: "UPDATE_PROPERTY_FILES", value: "true")
                        }
                    }
                }
            }
        }
    }
}

repositories {
    maven { url "http://192.168.1.108:8081/repository/maven-public/" }
    maven {
        url 'https://maven.aliyun.com/repository/central'
        name 'central'
    }
    maven {
        url 'https://maven.aliyun.com/repository/jcenter'
        name 'jcenter'
    }
    maven {
        url 'https://maven.aliyun.com/repository/google'
        name 'Google'
    }
    flatDir {
        dirs 'libs'  // 申明本地库
    }
}
dependencies {

    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'
    compile "com.badlogicgames.gdx:gdx-box2d:1.9.8"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-armeabi"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-armeabi-v7a"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-arm64-v8a"
    compile project(path: ':core')

}